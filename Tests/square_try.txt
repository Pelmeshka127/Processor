in
pop ax
in
pop bx
in
pop cx

push ax
push 0
je :linear

jump :square


linear:
    push bx
    push 0
    je :b_zero

    push cx
    push 0
    je :c_zero

    push cx
    push bx
    div
    minus
    out
    hlt

square:
    push bx
    push 0
    jne :desc

    push ax
    push cx
    mul
    push 0
    jb :no_roots

    push ax
    push cx
    mul
    push 0
    je :one_root

    push cx
    push ax
    div
    minus
    sqrt
    pop [1]
    push [1]
    minus
    out
    push [1]
    out
    hlt

desc:
    push ax
    push cx
    push 4
    mul
    mul
    push bx
    push bx
    mul
    sub
    pop dx

    push dx
    push 0
    je :one_root

    push dx
    push 0
    ja :no_roots

    push dx
    sqrt
    pop dx

    push dx
    push bx
    minus
    sub
    push ax
    push 2
    mul
    div
    out

    push dx
    push bx
    minus
    add
    push ax
    push 2
    mul
    div
    out
    hlt


one_root:
    push bx
    minus
    push ax
    push 2
    mul
    div
    out
    hlt

b_zero:
    push cx
    push 0
    je :inf_roots
    jump :no_roots

c_zero:
    push cx
    out
    hlt

inf_roots:
    inf
    hlt

no_roots:
    zero
    hlt